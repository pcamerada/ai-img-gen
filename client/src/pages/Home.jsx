import React, { useState, useEffect } from 'react';

import { Card, FormField, Loader } from "../components";

import { useStateContext } from '../context/ContextProvider';

const Home = () => {

  const { openAlert } = useStateContext();

  const [loading, setLoading] = useState(false);
  const [allPost, setAllPost] = useState(null);

  const [searchText, setSearchText] = useState('');
  const [searchedResults, setSearchedResults] = useState([]);

  useEffect(() => {
    const fetchPost = async () => {
      setLoading(true);
      try {
        const response = await fetch('http://localhost:8080/api/v1/post', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          }
        })
        if(response.ok) {
          const result = await response.json();
          setAllPost(result.data.reverse());
        }
      } catch (error) {
        openAlert(error.message, 'error')
      } finally {
        setLoading(false)
      }
    }
  
    fetchPost();
  }, []);

  const handleSearchChange = (e) => {
    setSearchText(e.target.value);
    const searchParm = e.target.value.toLowerCase();
    setTimeout(() => {
      const searchResult = allPost.filter((element) => element.name.toLowerCase().includes(searchParm) || element.prompt.toLowerCase().includes(searchParm))
      setSearchedResults(searchResult);
    }, 500);
  }
  
  
  const RenderCard = ({ data, title }) => {
    if (data?.length > 0) {
      return data.map((post) => <Card key={post._id} {...post} />)
    }

    return (
      <h2 className='mt-5 font-bold text-[#6469ff] text-xl uppercase'>
        { title }
      </h2>
    )
  }

  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>
          The Community Showcase
        </h1>
        <p className='mt-2 text-[#666e75] text-[16px] max-w-[500px]'>
          Browse through a collection of imaginative and visually stunning images generated by DALL-E AI
        </p>
      </div>
      <div className='mt-16'>
        <FormField 
          labelName='Search Posts'
          type='text'
          name='text'
          placeholder='Seach posts'
          value={searchText}
          handleChange={handleSearchChange}
          />
      </div>
      <div className='mt-10'>
        { loading ? (
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                Showing results for <span className='text-[#222328]'>{ searchText }</span>
              </h2>
            )}
            <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
              {searchText ? (
                <RenderCard data={searchedResults} title='No search results found' />
              ) : (
                <RenderCard data={allPost} title='No post found' />
              )}
            </div>
          </>
        ) }
      </div>
    </section>
  )
}

export default Home